#!/usr/bin/make -f

## This Makefile builds wifidog using the OpenWRT SDK.
## The OpenWRT SDK is a prebuilt toolchain for pentium linux pcs that
## you can download from http://www.openwrt.org,
##    wget http://downloads.openwrt.org/whiterussian/newest/OpenWrt-SDK-Linux-i686-1.tar.bz2
## This prebuilt toolchain does not include all the pieces of the OpenWRT linux-gnu embedded OS.
## It is what is sufficient to build yourself add-on packages.

ifndef BUILDROOT
	ERR := $(error Please set BUILDROOT to OpenWRT's buildroot)
endif

ARCH:=mipsel

WIFIDOG_MAJOR_VERSION := $(shell awk -F= '$$1 == "WIFIDOG_MAJOR_VERSION" {print $$2}' configure.in)
WIFIDOG_MINOR_VERSION := $(shell awk -F= '$$1 == "WIFIDOG_MINOR_VERSION" {print $$2}' configure.in)
WIFIDOG_MICRO_VERSION := $(shell awk -F= '$$1 == "WIFIDOG_MICRO_VERSION" {print $$2}' configure.in)
VERSION=$(WIFIDOG_MAJOR_VERSION).$(WIFIDOG_MINOR_VERSION).$(WIFIDOG_MICRO_VERSION)

BUILD_DIR:=$(CURDIR)/ipkg
TMP_DIR:=$(BUILD_DIR)/tmp
STAGING_DIR=$(BUILDROOT)/staging_dir_$(ARCH)

GNU_TARGET_NAME=$(ARCH)-linux
TARGET_CROSS=$(STAGING_DIR)/bin/$(ARCH)-linux-uclibc-

CC=$(TARGET_CROSS)gcc
LD=$(TARGET_CROSS)ld
AR=$(TARGET_CROSS)ar
RANLIB=$(TARGET_CROSS)ranlib
STRIP=$(TARGET_CROSS)strip
IPKG_BUILD=$(STAGING_DIR)/usr/bin/ipkg-build

all: binary

build: build-wifidog

build-wifidog: build-wifidog-stamp
build-wifidog-stamp:
	-test -f autogen.sh && ./autogen.sh
	-$(MAKE) distclean
	CC=$(CC) LD=$(LD) AR=$(AR) RANLIB=$(RANLIB) ./configure --prefix=/usr  --host=$(ARCH) --target=$(ARCH)
	$(MAKE)

	touch build-wifidog-stamp

clean:
	-$(MAKE) clean
	-$(MAKE) distclean
	rm -rf $(TMP_DIR)
	rm -f build-wifidog-stamp

install: build install-wifidog
	mkdir -p $(TMP_DIR)/etc
	cp $(CURDIR)/wifidog.conf $(TMP_DIR)/etc
	mkdir -p $(TMP_DIR)/usr/bin
	# OpenWrt does not have a full init.d architecture, but we still need
	# the module check so we install the normal init.d script in /usr/bin/wifidog-init
	cp $(CURDIR)/scripts/init.d/wifidog $(TMP_DIR)/usr/bin/wifidog-init
	chmod +x $(TMP_DIR)/usr/bin/wifidog-init
	# And call wifidog-init from S65wifidog
	mkdir -p $(TMP_DIR)/etc/init.d
	cp $(CURDIR)/scripts/openwrt/S65wifidog $(TMP_DIR)/etc/init.d
	chmod +x $(TMP_DIR)/etc/init.d/S65wifidog

install-wifidog:
	mkdir -p $(TMP_DIR)/usr/bin
	cp $(CURDIR)/src/wifidog $(TMP_DIR)/usr/bin
	cp $(CURDIR)/src/wdctl $(TMP_DIR)/usr/bin
	$(STRIP) $(TMP_DIR)/usr/bin/wifidog
	$(STRIP) $(TMP_DIR)/usr/bin/wdctl

binary: build install
	mkdir -p $(TMP_DIR)/CONTROL
	echo "Package: wifidog" > $(TMP_DIR)/CONTROL/control
	echo "Version: $(VERSION)" >> $(TMP_DIR)/CONTROL/control
	echo "Architecture: $(ARCH)" >> $(TMP_DIR)/CONTROL/control
	echo "Section: base" >> $(TMP_DIR)/CONTROL/control
	echo "Maintainer: WiFiDog <wifidog@listes.ilesansfil.org>" >> $(TMP_DIR)/CONTROL/control
	echo "Priority: optional" >> $(TMP_DIR)/CONTROL/control
	echo "Description: The WiFiDog project is a complete and embeedable captive portal solution for wireless community groups or individuals who wish to open a free HotSpot while still preventing abuse of their Internet connection." >> $(TMP_DIR)/CONTROL/control
	echo "Source: http://www.ilesansfil.org/wiki/WiFiDog" >> $(TMP_DIR)/CONTROL/control
	echo "/etc/wifidog.conf" > $(TMP_DIR)/CONTROL/conffiles
	$(IPKG_BUILD) -c -o root -g root $(TMP_DIR) $(CURDIR)

.PHONY: all clean build install binary

